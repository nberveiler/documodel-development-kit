worker_processes  1;
daemon off;
pid tmp/nginx.pid;
error_log stderr;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  access_log logs/access.log;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  #gzip  on;
  proxy_temp_path proxy_temp;
  client_body_temp_path client_body_temp;
  uwsgi_temp_path uwsgi_temp;
  fastcgi_temp_path fastcgi_temp;
  scgi_temp_path scgi_temp;

  client_max_body_size 0;

  <!-- upstream documodel-workhorse {
    server <%= config.workhorse.__active_host %>:<%= config.workhorse.__active_port %> fail_timeout=0;
  } -->

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen <%= config.nginx.listen %>:<%= config.port %><%= ' ssl' if config.https? %><%= ' http2' if config.https? && config.nginx.http2? %>;
<%- if config.https? -%>

    ssl_certificate <%= config.dmdk_root.join(config.nginx.ssl.certificate) %>;
    ssl_certificate_key <%= config.dmdk_root.join(config.nginx.ssl.key) %>;
<%- end -%>

    location / {
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto   $scheme;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          $connection_upgrade;

      proxy_read_timeout 300;

      proxy_pass http://documodel-workhorse;
    }
  }
<%- if config.https? -%>

  server {
    listen <%= config.nginx.listen %>:<%= config.nginx.http.port %>;

    return 301 https://$host:<%= config.port %>$request_uri;
  }
<%- end -%>
}
