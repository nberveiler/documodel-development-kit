# GitLab Development Kit

Usage: dmdk <command> [<args>]

Manage services:

  dmdk start                                 # Start everything
  dmdk start redis postgresql                # Start specific services
  dmdk stop                                  # Stop all services and unload Runit
  dmdk stop redis postgresql                 # Stop specific service
  dmdk status                                # See status of all services
  dmdk restart                               # Restart everything
  dmdk restart redis postgresql              # Restart specific services

  dmdk tail                                  # Tail all logs
  dmdk tail redis postgresql                 # Tail specific logs

  dmdk thin                                  # Run Rails web server with thin in foreground
  dmdk psql [-d gitlabhq_development]        # Run Postgres console
  dmdk redis-cli                             # Run Redis console

Manage DMDK:

  dmdk init                                  # Initialize DMDK
  dmdk install gitlab_repo=https://my-fork   # Install everything
  dmdk update                                # Pull application changes from Git
  dmdk reconfigure                           # Delete and regenerate all config files created by DMDK

  dmdk config get postgresql.port            # Get configuration values
  dmdk diff-config                           # Print difference between current and new configuration values
  dmdk trust /path/to/dmdk                    # Mark an existing DMDK as trusted

  dmdk doctor                                # Run diagnostics on DMDK
  dmdk version                               # Print current DMDK version
  dmdk help                                  # Print this help text

# Development admin account: root / 5iveL!fe

For more information about GitLab development see
https://docs.gitlab.com/ce/development/README.html.
